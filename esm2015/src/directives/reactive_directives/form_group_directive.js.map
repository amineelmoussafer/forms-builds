{"version":3,"file":"form_group_directive.js","sourceRoot":"","sources":["../../../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, EventEmitter, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {Form} from '../form_interface';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {cleanUpControl, composeAsyncValidators, composeValidators, removeDir, setUpControl, setUpFormContainer, syncPendingControls} from '../shared';\n\nimport {FormControlName} from './form_control_name';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n\n/**\n * @whatItDoes Binds an existing {@link FormGroup} to a DOM element.\n *\n * @howToUse\n *\n * This directive accepts an existing {@link FormGroup} instance. It will then use this\n * {@link FormGroup} instance to match any child {@link FormControl}, {@link FormGroup},\n * and {@link FormArray} instances to child {@link FormControlName}, {@link FormGroupName},\n * and {@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {@link FormGroup}, or you can set it programmatically later using the {@link FormGroup}'s\n * {@link AbstractControl#setValue setValue} or {@link AbstractControl#patchValue patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {@link FormGroup}'s {@link AbstractControl#valueChanges valueChanges} event.  You can also\n * listen to its {@link AbstractControl#statusChanges statusChanges} event to be notified when the\n * validation status is re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `@angular/forms`\n *\n * **NgModule**: {@link ReactiveFormsModule}\n *\n *  @stable\n */\n@Directive({\n  selector: '[formGroup]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  exportAs: 'ngForm'\n})\nexport class FormGroupDirective extends ControlContainer implements Form,\n    OnChanges {\n  public readonly submitted: boolean = false;\n\n  private _oldForm: FormGroup;\n  directives: FormControlName[] = [];\n\n  @Input('formGroup') form: FormGroup = null !;\n  @Output() ngSubmit = new EventEmitter();\n\n  constructor(\n      @Optional() @Self() @Inject(NG_VALIDATORS) private _validators: any[],\n      @Optional() @Self() @Inject(NG_ASYNC_VALIDATORS) private _asyncValidators: any[]) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n    }\n  }\n\n  get formDirective(): Form { return this; }\n\n  get control(): FormGroup { return this.form; }\n\n  get path(): string[] { return []; }\n\n  addControl(dir: FormControlName): FormControl {\n    const ctrl: any = this.form.get(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n    return ctrl;\n  }\n\n  getControl(dir: FormControlName): FormControl { return <FormControl>this.form.get(dir.path); }\n\n  removeControl(dir: FormControlName): void { removeDir<FormControlName>(this.directives, dir); }\n\n  addFormGroup(dir: FormGroupName): void {\n    const ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n\n  removeFormGroup(dir: FormGroupName): void {}\n\n  getFormGroup(dir: FormGroupName): FormGroup { return <FormGroup>this.form.get(dir.path); }\n\n  addFormArray(dir: FormArrayName): void {\n    const ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n\n  removeFormArray(dir: FormArrayName): void {}\n\n  getFormArray(dir: FormArrayName): FormArray { return <FormArray>this.form.get(dir.path); }\n\n  updateModel(dir: FormControlName, value: any): void {\n    const ctrlÂ  = <FormControl>this.form.get(dir.path);\n    ctrl.setValue(value);\n  }\n\n  onSubmit($event: Event): boolean {\n    (this as{submitted: boolean}).submitted = true;\n    syncPendingControls(this.form, this.directives);\n    this.ngSubmit.emit($event);\n    return false;\n  }\n\n  onReset(): void { this.resetForm(); }\n\n  resetForm(value: any = undefined): void {\n    this.form.reset(value);\n    (this as{submitted: boolean}).submitted = false;\n  }\n\n\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      const newCtrl: any = this.form.get(dir.path);\n      if (dir.control !== newCtrl) {\n        cleanUpControl(dir.control, dir);\n        if (newCtrl) setUpControl(newCtrl, dir);\n        (dir as{control: FormControl}).control = newCtrl;\n      }\n    });\n\n    this.form._updateTreeValidity({emitEvent: false});\n  }\n\n  private _updateRegistrations() {\n    this.form._registerOnCollectionChange(() => this._updateDomValue());\n    if (this._oldForm) this._oldForm._registerOnCollectionChange(() => {});\n    this._oldForm = this.form;\n  }\n\n  private _updateValidators() {\n    const sync = composeValidators(this._validators);\n    this.form.validator = Validators.compose([this.form.validator !, sync !]);\n\n    const async = composeAsyncValidators(this._asyncValidators);\n    this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator !, async !]);\n  }\n\n  private _checkFormPresent() {\n    if (!this.form) {\n      ReactiveErrors.missingFormException();\n    }\n  }\n}\n"]}