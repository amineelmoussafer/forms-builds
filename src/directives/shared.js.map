{"version":3,"sources":["../../../../../modules/@angular/forms/src/directives/shared.ts"],"names":[],"mappings":"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","file":"shared.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isBlank, isPresent, looseIdentical} from '../facade/lang';\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {Validators} from '../validators';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {normalizeAsyncValidator, normalizeValidator} from './normalize_validator';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {RangeValueAccessor} from './range_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  return [...parent.path, name];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (!control) _throwError(dir, 'Cannot find control with');\n  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');\n\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n  dir.valueAccessor.writeValue(control.value);\n\n  // view -> model\n  dir.valueAccessor.registerOnChange((newValue: any) => {\n    dir.viewToModelUpdate(newValue);\n    control.markAsDirty();\n    control.setValue(newValue, {emitModelToViewChange: false});\n  });\n\n  // touched\n  dir.valueAccessor.registerOnTouched(() => control.markAsTouched());\n\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n\n  if (dir.valueAccessor.setDisabledState) {\n    control.registerOnDisabledChange(\n        (isDisabled: boolean) => { dir.valueAccessor.setDisabledState(isDisabled); });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator | ValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange)\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: Validator | ValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange)\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange(() => control.updateValueAndValidity());\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function cleanUpControl(control: FormControl, dir: NgControl) {\n  dir.valueAccessor.registerOnChange(() => _noControlError(dir));\n  dir.valueAccessor.registerOnTouched(() => _noControlError(dir));\n\n  dir._rawValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  dir._rawAsyncValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  if (control) control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpFormContainer(\n    control: FormGroup | FormArray, dir: AbstractFormGroupDirective | FormArrayName) {\n  if (isBlank(control)) _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let /** @type {?} */ messageEnd: string;\n  if (dir.path.length > 1) {\n    messageEnd = `path: '${dir.path.join(' -> ')}'`;\n  } else if (dir.path[0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeValidators(validators: Array<Validator|Function>): ValidatorFn {\n  return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeAsyncValidators(validators: Array<Validator|Function>): AsyncValidatorFn {\n  return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                                 null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!changes.hasOwnProperty('model')) return false;\n  const /** @type {?} */ change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n\nconst /** @type {?} */ BUILTIN_ACCESSORS = [\n  CheckboxControlValueAccessor,\n  RangeValueAccessor,\n  NumberValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor {\n  if (!valueAccessors) return null;\n\n  let /** @type {?} */ defaultAccessor: ControlValueAccessor;\n  let /** @type {?} */ builtinAccessor: ControlValueAccessor;\n  let /** @type {?} */ customAccessor: ControlValueAccessor;\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor)\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (customAccessor)\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n\n  _throwError(dir, 'No valid value accessor for form control with');\n  return null;\n}\n"]}