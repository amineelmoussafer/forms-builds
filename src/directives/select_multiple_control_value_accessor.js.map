{"version":3,"sources":["../../../../../modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ts"],"names":[],"mappings":"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","file":"select_multiple_control_value_accessor.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Host, Input, OnDestroy, Optional, Provider, Renderer, forwardRef} from '@angular/core';\n\nimport {isPrimitive, looseIdentical} from '../facade/lang';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string, value: any): string {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (!isPrimitive(value)) value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n\n/** Mock interface for HTML Options */\ninterface HTMLOption {\n  value: string;\n  selected: boolean;\n}\n/**\n * Mock interface for HTMLCollection\n * @abstract\n */\nabstract class HTMLCollection {\n  length: number;\n/**\n * @abstract\n * @param {?} _\n * @return {?}\n */\nitem(_: number) {}\n}\n\nfunction HTMLCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nHTMLCollection.prototype.length;\n}\n\n/**\n * The accessor for writing a value and listening to changes on a select element.\n * \n *  ### Caveat: Options selection\n * \n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n * \n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n * \n * #### Syntax\n * \n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n * \n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n * \n * \\@stable\n */\nexport class SelectMultipleControlValueAccessor implements ControlValueAccessor {\n  value: any;\n  /** @internal */\n  _optionMap: Map<string, NgSelectMultipleOption> = new Map<string, NgSelectMultipleOption>();\n  /** @internal */\n  _idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\nprivate _compareWith: (o1: any, o2: any) => boolean = looseIdentical;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    let /** @type {?} */ optionSelectedStateSetter: (opt: NgSelectMultipleOption, o: any) => void;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const /** @type {?} */ ids = value.map((v) => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(ids.indexOf(o.toString()) > -1); };\n    } else {\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(false); };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (_: any) => {\n      const /** @type {?} */ selected: Array<any> = [];\n      if (_.hasOwnProperty('selectedOptions')) {\n        const /** @type {?} */ options: HTMLCollection = _.selectedOptions;\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: any = options.item(i);\n          const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade on IE\n      else {\n        const /** @type {?} */ options: HTMLCollection = /** @type {?} */(( <HTMLCollection>_.options));\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: HTMLOption = options.item(i);\n          if (opt.selected) {\n            const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_registerOption(value: NgSelectMultipleOption): string {\n    const /** @type {?} */ id: string = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string {\n    for (const /** @type {?} */ id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n    }\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    const /** @type {?} */ id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n  host: {'(change)': 'onChange($event.target)', '(blur)': 'onTouched()'},\n  providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'compareWith': [{ type: Input },],\n};\n}\n\nfunction SelectMultipleControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectMultipleControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectMultipleControlValueAccessor.ctorParameters;\n/** @type {?} */\nSelectMultipleControlValueAccessor.propDecorators;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.value;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._optionMap;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._idCounter;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onChange;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._compareWith;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._renderer;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n * \n * ### Example\n * \n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nexport class NgSelectMultipleOption implements OnDestroy {\n  id: string;\n  /** @internal */\n  _value: any;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _renderer: Renderer,\nprivate _select: SelectMultipleControlValueAccessor) {\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset ngValue(value: any) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * \\@internal\n * @param {?} selected\n * @return {?}\n */\n_setSelected(selected: boolean) {\n    this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n\nfunction NgSelectMultipleOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSelectMultipleOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSelectMultipleOption.ctorParameters;\n/** @type {?} */\nNgSelectMultipleOption.propDecorators;\n/** @type {?} */\nNgSelectMultipleOption.prototype.id;\n/**\n * \\@internal\n * @type {?}\n */\nNgSelectMultipleOption.prototype._value;\n/** @type {?} */\nNgSelectMultipleOption.prototype._element;\n/** @type {?} */\nNgSelectMultipleOption.prototype._renderer;\n/** @type {?} */\nNgSelectMultipleOption.prototype._select;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}