{"version":3,"file":"form_control_name.js","sourceRoot":"","sources":["../../../../../../modules/@angular/forms/src/directives/reactive_directives/form_control_name.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, SkipSelf, forwardRef} from '@angular/core';\n\nimport {EventEmitter} from '../../facade/async';\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor} from '../shared';\nimport {AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const controlNameBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\nexport class FormControlName extends NgControl implements OnChanges, OnDestroy {\n  /** @internal */\n  viewModel: any;\n  private _added = false; name: string; model: any; update = new EventEmitter();\n  set isDisabled(isDisabled: boolean) { ReactiveErrors.disabledAttrWarning(); }\n\n  constructor( parent: ControlContainer, validators: Array<Validator|ValidatorFn>, asyncValidators:\n          Array<Validator|AsyncValidatorFn>, valueAccessors: ControlValueAccessor[]) {\n    super();\n    this._parent = parent;\n    this._rawValidators = validators || [];\n    this._rawAsyncValidators = asyncValidators || [];\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this._added) {\n      this._checkParentType();\n      this.formDirective.addControl(this);\n      if (this.control.disabled) this.valueAccessor.setDisabledState(true);\n      this._added = true;\n    }\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n\n  viewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  get formDirective(): any { return this._parent ? this._parent.formDirective : null; }\n\n  get validator(): ValidatorFn { return composeValidators(this._rawValidators); }\n\n  get asyncValidator(): AsyncValidatorFn {\n    return composeAsyncValidators(this._rawAsyncValidators);\n  }\n\n  get control(): FormControl { return this.formDirective.getControl(this); }\n\n  private _checkParentType(): void {\n    if (!(this._parent instanceof FormGroupName) &&\n        this._parent instanceof AbstractFormGroupDirective) {\n      ReactiveErrors.ngModelGroupException();\n    } else if (\n        !(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n        !(this._parent instanceof FormArrayName)) {\n      ReactiveErrors.controlParentException();\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControlName]', providers: [controlNameBinding]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formControlName', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}