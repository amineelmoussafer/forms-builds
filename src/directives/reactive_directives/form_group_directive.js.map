{"version":3,"sources":["../../../../../../modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;AAEH,OAAO,EAAA,SAAE,EAAU,MAAA,EAAQ,KAAA,EAAkB,QAAA,EAAU,MAAA,EAAQ,IAAA,EAAqB,UAAA,EAAW,MAAA,eAAA,CAAA;AAE/F,OAAO,EAAA,YAAE,EAAY,MAAA,oBAAA,CAAA;AACrB,OAAO,EAAA,WAAE,EAAW,MAAA,yBAAA,CAAA;AAEpB,OAAO,EAAA,mBAAE,EAAoB,aAAA,EAAe,UAAA,EAAW,MAAA,kBAAA,CAAA;AACvD,OAAO,EAAA,gBAAE,EAAgB,MAAA,sBAAA,CAAA;AAEzB,OAAO,EAAA,cAAE,EAAc,MAAA,oBAAA,CAAA;AACvB,OAAO,EAAA,cAAE,EAAe,sBAAA,EAAwB,iBAAA,EAAmB,YAAA,EAAc,kBAAA,EAAmB,MAAA,WAAA,CAAA;AAKpG,MAAM,CAAC,IAAA,gBAAA,CAAM,qBAAA,GAA6B;IACxC,OAAO,EAAE,gBAAA;IACT,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,kBAAA,EAAA,CAAA,CAAmB;CAClD,CAAC;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AACH;IAEC,sCAAA;IAMD;;;OAGG;IACH,4BAAiB,WAAiB,EACjB,gBAAsB;QADvC,YAGI,iBAAO,SACR;QAJc,iBAAA,GAAA,WAAA,CAAiB;QACjB,sBAAA,GAAA,gBAAA,CAAsB;QAT7B,gBAAA,GAAsB,KAAA,CAAM;QAApC,gBAAU,GAEsB,EAAA,CAAG;QAAlC,UAAI,GAEc,IAAA,CAAK;QADvB,cAAQ,GAEG,IAAI,YAAA,EAAa,CAAE;;IAO/B,CAAC;IACH;;;OAGG;IACH,wCAJG,GAIH,UAJG,OAAA;QAKC,IAAI,CAJC,iBAAC,EAAiB,CAAE;QAKzB,EAAE,CAAC,CAAC,OAJC,CAAO,cAAC,CAAc,MAAC,CAAM,CAAC,CAAC,CAAA;YAKlC,IAAI,CAJC,iBAAC,EAAiB,CAAE;YAKzB,IAAI,CAJC,eAAC,EAAe,CAAE;YAKvB,IAAI,CAJC,oBAAC,EAAoB,CAAE;QAK9B,CAAC;IACH,CAAC;IAIH,sBANG,yCAAA;QAGH;;WAEG;aACH,cAN6B,MAAA,CAAO,IAAA,CAAK,UAAC,CAAU,CAAC,CAAA;;;OAAA;IAUrD,sBARG,6CAAA;QAKH;;WAEG;aACH,cAR8B,MAAA,CAAO,IAAA,CAAK,CAAC,CAAA;;;OAAA;IAY3C,sBAVG,uCAAA;QAOH;;WAEG;aACH,cAV6B,MAAA,CAAO,IAAA,CAAK,IAAC,CAAI,CAAC,CAAA;;;OAAA;IAc/C,sBAZG,oCAAA;QASH;;WAEG;aACH,cAZyB,MAAA,CAAO,EAAA,CAAG,CAAC,CAAA;;;OAAA;IAapC;;;OAGG;IACH,uCAfG,GAeH,UAfG,GAAA;QAgBC,IAAM,gBAAgB,CAfhB,IAAA,GAAY,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;QAgB1C,YAAY,CAfC,IAAC,EAAK,GAAA,CAAI,CAAC;QAgBxB,IAAI,CAfC,sBAAC,CAAsB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;QAgBhD,IAAI,CAfC,UAAC,CAAU,IAAC,CAAI,GAAC,CAAG,CAAC;QAgB1B,MAAM,CAfC,IAAA,CAAK;IAgBd,CAAC;IACH;;;OAGG;IACH,uCAlBG,GAkBH,UAlBG,GAAA,IAA+C,MAAA,CAAA,CAAoB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC,CAAC,CAAA;IAmB/F;;;OAGG;IACH,0CArBG,GAqBH,UArBG,GAAA,IAA2C,WAAA,CAAY,MAAC,CAAM,IAAC,CAAI,UAAC,EAAW,GAAA,CAAI,CAAC,CAAC,CAAA;IAsBxF;;;OAGG;IACH,yCAxBG,GAwBH,UAxBG,GAAA;QAyBC,IAAM,gBAAgB,CAxBhB,IAAA,GAAY,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;QAyB1C,kBAAkB,CAxBC,IAAC,EAAK,GAAA,CAAI,CAAC;QAyB9B,IAAI,CAxBC,sBAAC,CAAsB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;IAyBlD,CAAC;IACH;;;OAGG;IACH,4CA3BG,GA2BH,UA3BG,GAAA,IAAyC,CAAA;IA4B5C;;;OAGG;IACH,yCA9BG,GA8BH,UA9BG,GAAA,IAA6C,MAAA,CAAA,CAAkB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC,CAAC,CAAA;IA+B3F;;;OAGG;IACH,yCAjCG,GAiCH,UAjCG,GAAA;QAkCC,IAAM,gBAAgB,CAjChB,IAAA,GAAY,IAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;QAkC1C,kBAAkB,CAjCC,IAAC,EAAK,GAAA,CAAI,CAAC;QAkC9B,IAAI,CAjCC,sBAAC,CAAsB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;IAkClD,CAAC;IACH;;;OAGG;IACH,4CApCG,GAoCH,UApCG,GAAA,IAAyC,CAAA;IAqC5C;;;OAGG;IACH,yCAvCG,GAuCH,UAvCG,GAAA,IAA6C,MAAA,CAAA,CAAkB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC,CAAC,CAAA;IAwC3F;;;;OAIG;IACH,wCA3CG,GA2CH,UA3CG,GAAA,EAAA,KAAA;QA4CC,IAAM,gBAAgB,CA3ChB,IAAA,GAAK,CAAgB,IAAC,CAAI,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAA,CAAC;QA4CnD,IAAI,CA3CC,QAAC,CAAQ,KAAC,CAAK,CAAC;IA4CvB,CAAC;IACH;;;OAGG;IACH,qCA9CG,GA8CH,UA9CG,MAAA;QA+CC,IAAI,CA9CC,UAAC,GAAY,IAAA,CAAK;QA+CvB,IAAI,CA9CC,QAAC,CAAQ,IAAC,CAAI,MAAC,CAAM,CAAC;QA+C3B,MAAM,CA9CC,KAAA,CAAM;IA+Cf,CAAC;IACH;;OAEG;IACH,oCAhDG,GAgDH,cAhDoB,IAAA,CAAK,SAAC,EAAS,CAAE,CAAC,CAAA;IAiDtC;;;OAGG;IACH,sCAnDG,GAmDH,UAnDG,KAAA;QAAA,sBAAA,EAAA,iBAAA;QAoDC,IAAI,CAnDC,IAAC,CAAI,KAAC,CAAK,KAAC,CAAK,CAAC;QAoDvB,IAAI,CAnDC,UAAC,GAAY,KAAA,CAAM;IAoD1B,CAAC;IACH;;;OAGG;IACH,4CArDG,GAqDH;QAAA,iBAWG;QAVC,IAAI,CArDC,UAAC,CAAU,OAAC,CAAO,UAAA,GAAC;YAsDvB,IAAM,gBAAgB,CArDhB,OAAA,GAAe,KAAA,CAAK,IAAC,CAAI,GAAC,CAAG,GAAC,CAAG,IAAC,CAAI,CAAC;YAsD7C,EAAE,CAAC,CAAC,GArDC,CAAG,QAAC,KAAY,OAAA,CAAQ,CAAC,CAAA;gBAsD5B,cAAc,CArDC,GAAC,CAAG,QAAC,EAAS,GAAA,CAAI,CAAC;gBAsDlC,EAAE,CAAC,CAAC,OArDC,CAAO;oBAAC,YAAA,CAAa,OAAC,EAAQ,GAAA,CAAI,CAAC;gBAsDxC,GAAG,CArDC,QAAC,GAAU,OAAA,CAAQ;YAsDzB,CAAC;QACH,CAAC,CArDC,CAAC;QAuDH,IAAI,CArDC,IAAC,CAAI,mBAAC,CAAmB,EAAC,SAAC,EAAU,KAAA,EAAM,CAAC,CAAC;IAsDpD,CAAC;IACH;;OAEG;IAtDA,iDAAA,GAuDH;QAAA,iBAIG;QAHC,IAAI,CAvDC,IAAC,CAAI,2BAAC,CAA2B,cAAM,OAAA,KAAA,CAAK,eAAC,EAAe,EAArB,CAAqB,CAAE,CAAC;QAwDpE,EAAE,CAAC,CAAC,IAvDC,CAAI,QAAC,CAAQ;YAAC,IAAA,CAAK,QAAC,CAAQ,2BAAC,CAA2B,cAAM,CAAA,CAAG,CAAC;QAwDvE,IAAI,CAvDC,QAAC,GAAU,IAAA,CAAK,IAAC,CAAI;IAwD5B,CAAC;IACH;;OAEG;IAxDA,8CAAA,GAyDH;QACI,IAAM,gBAAgB,CAzDhB,IAAA,GAAO,iBAAA,CAAkB,IAAC,CAAI,WAAC,CAAW,CAAC;QA0DjD,IAAI,CAzDC,IAAC,CAAI,SAAC,GAAW,UAAA,CAAW,OAAC,CAAO,CAAC,IAAC,CAAI,IAAC,CAAI,SAAC,EAAU,IAAA,CAAK,CAAC,CAAC;QA2DtE,IAAM,gBAAgB,CAzDhB,KAAA,GAAQ,sBAAA,CAAuB,IAAC,CAAI,gBAAC,CAAgB,CAAC;QA0D5D,IAAI,CAzDC,IAAC,CAAI,cAAC,GAAgB,UAAA,CAAW,YAAC,CAAY,CAAC,IAAC,CAAI,IAAC,CAAI,cAAC,EAAe,KAAA,CAAM,CAAC,CAAC;IA0DxF,CAAC;IACH;;OAEG;IA1DA,8CAAA,GA2DH;QACI,EAAE,CAAC,CAAC,CA3DC,IAAC,CAAI,IAAC,CAAI,CAAC,CAAA;YA4Dd,cAAc,CA3DC,oBAAC,EAAoB,CAAE;QA4DxC,CAAC;IACH,CAAC;IAkBH,yBAAC;AAAD,CAjMA,AAiMC,CA/LA,gBAAA;;AAmHM,6BAAA,GAAoC;IA4D3C,EA3DE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA4DvB,QAAQ,EA3DE,aAAA;gBA4DV,SAAS,EA3DE,CAAA,qBAAE,CAAqB;gBA4DlC,IAAI,EA3DE,EAAA,UAAE,EAAW,kBAAA,EAAoB,SAAA,EAAW,WAAA,EAAY;gBA4D9D,QAAQ,EA3DE,QAAA;aA4DX,EA3DC,EAAG;CA4DJ,CA3DC;AA4DF,kBAAkB;AA1DX,iCAAA,GAAiF,cAAM,OAAA;IA4D9F,EAAC,IA3DC,EAAK,KAAA,EAAO,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,QAAA,EAAS,EAAG,EAAE,IAAA,EAAM,IAAA,EAAK,EAAG,EAAE,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,aAAE,EAAa,EAAG,EAAE,EAAG;IA4D5G,EAAC,IA3DC,EAAK,KAAA,EAAO,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,QAAA,EAAS,EAAG,EAAE,IAAA,EAAM,IAAA,EAAK,EAAG,EAAE,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,mBAAE,EAAmB,EAAG,EAAE,EAAG;CA4DjH,EA9D6F,CA8D7F,CA3DC;AACK,iCAAA,GAAyD;IA4DhE,MAAM,EA3DE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;IA4DhD,UAAU,EA3DE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;CA4D7B,CA3DC;AA8DF;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACtC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACtC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;IACzC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,CAAC;AAC9C,CAAC","file":"form_group_directive.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {EventEmitter} from '../../facade/async';\nimport {ListWrapper} from '../../facade/collection';\nimport {FormArray, FormControl, FormGroup} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {Form} from '../form_interface';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {cleanUpControl, composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from '../shared';\n\nimport {FormControlName} from './form_control_name';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const /** @type {?} */ formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n * \n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue} methods.\n * \n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl.statusChanges} event to be notified when the validation status is\n * re-calculated.\n * \n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n * \n * ### Example\n * \n * In this example, we create form controls for first name and last name.\n * \n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: {\\@link ReactiveFormsModule}\n * \n *  \\@stable\n */\nexport class FormGroupDirective extends ControlContainer implements Form,\n    OnChanges {\nprivate _submitted: boolean = false;\nprivate _oldForm: FormGroup;\n  directives: FormControlName[] = [];\n\n   form: FormGroup = null;\n   ngSubmit = new EventEmitter();\n/**\n * @param {?} _validators\n * @param {?} _asyncValidators\n */\nconstructor(\nprivate _validators: any[],\nprivate _asyncValidators: any[]) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n    }\n  }\n/**\n * @return {?}\n */\nget submitted(): boolean { return this._submitted; }\n/**\n * @return {?}\n */\nget formDirective(): Form { return this; }\n/**\n * @return {?}\n */\nget control(): FormGroup { return this.form; }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: FormControlName): FormControl {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n    return ctrl;\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: FormControlName): FormControl { return /** @type {?} */(( <FormControl>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: FormControlName): void { ListWrapper.remove(this.directives, dir); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormGroup(dir: FormGroupName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormGroup(dir: FormGroupName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormGroup(dir: FormGroupName): FormGroup { return /** @type {?} */(( <FormGroup>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormArray(dir: FormArrayName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormArray(dir: FormArrayName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormArray(dir: FormArrayName): FormArray { return /** @type {?} */(( <FormArray>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: FormControlName, value: any): void {\n    const /** @type {?} */ ctrl  = /** @type {?} */(( <FormControl>this.form.get(dir.path)));\n    ctrl.setValue(value);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSubmit($event: Event): boolean {\n    this._submitted = true;\n    this.ngSubmit.emit($event);\n    return false;\n  }\n/**\n * @return {?}\n */\nonReset(): void { this.resetForm(); }\n/**\n * @param {?=} value\n * @return {?}\n */\nresetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateDomValue() {\n    this.directives.forEach(dir => {\n      const /** @type {?} */ newCtrl: any = this.form.get(dir.path);\n      if (dir._control !== newCtrl) {\n        cleanUpControl(dir._control, dir);\n        if (newCtrl) setUpControl(newCtrl, dir);\n        dir._control = newCtrl;\n      }\n    });\n\n    this.form._updateTreeValidity({emitEvent: false});\n  }\n/**\n * @return {?}\n */\nprivate _updateRegistrations() {\n    this.form._registerOnCollectionChange(() => this._updateDomValue());\n    if (this._oldForm) this._oldForm._registerOnCollectionChange(() => {});\n    this._oldForm = this.form;\n  }\n/**\n * @return {?}\n */\nprivate _updateValidators() {\n    const /** @type {?} */ sync = composeValidators(this._validators);\n    this.form.validator = Validators.compose([this.form.validator, sync]);\n\n    const /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n    this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n  }\n/**\n * @return {?}\n */\nprivate _checkFormPresent() {\n    if (!this.form) {\n      ReactiveErrors.missingFormException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[formGroup]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: Input, args: ['formGroup', ] },],\n'ngSubmit': [{ type: Output },],\n};\n}\n\nfunction FormGroupDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroupDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormGroupDirective.ctorParameters;\n/** @type {?} */\nFormGroupDirective.propDecorators;\n/** @type {?} */\nFormGroupDirective.prototype._submitted;\n/** @type {?} */\nFormGroupDirective.prototype._oldForm;\n/** @type {?} */\nFormGroupDirective.prototype.directives;\n/** @type {?} */\nFormGroupDirective.prototype.form;\n/** @type {?} */\nFormGroupDirective.prototype.ngSubmit;\n/** @type {?} */\nFormGroupDirective.prototype._validators;\n/** @type {?} */\nFormGroupDirective.prototype._asyncValidators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}