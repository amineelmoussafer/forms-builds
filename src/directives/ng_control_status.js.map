{"version":3,"sources":["../../../../../modules/@angular/forms/src/directives/ng_control_status.ts"],"names":[],"mappings":"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","file":"ng_control_status.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\nexport class AbstractControlStatus {\nprivate _cd: AbstractControlDirective;\n/**\n * @param {?} cd\n */\nconstructor(cd: AbstractControlDirective) { this._cd = cd; }\n/**\n * @return {?}\n */\nget ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n/**\n * @return {?}\n */\nget ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n/**\n * @return {?}\n */\nget ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n/**\n * @return {?}\n */\nget ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n/**\n * @return {?}\n */\nget ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n/**\n * @return {?}\n */\nget ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n/**\n * @return {?}\n */\nget ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nfunction AbstractControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractControlStatus.prototype._cd;\n}\n\n\nexport const /** @type {?} */ ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n * \n * \\@stable\n */\nexport class NgControlStatus extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: NgControl) { super(cd); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatus.ctorParameters;\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n * \n * \\@stable\n */\nexport class NgControlStatusGroup extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: ControlContainer) { super(cd); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatusGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatusGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatusGroup.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}