{"version":3,"file":"abstract_form_group_directive.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/abstract_form_group_directive.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAMI,EAAC,gBAAgB,EAAC,MAAM,qBAAqB;OAE7C,EAAC,sBAAsB,EAAE,iBAAiB,EAAE,WAAW,EAAC,MAAM,UAAU;AAE/E;;;;GAIG;AACH,gDAAgD,gBAAgB;IAShE;;OAEG;IACH,QAAQ;QACJ,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACH;;OAEG;IACH,WAAW;QACP,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,IAAI,OAAO,KAAgB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1E;;;OAGG;IACH,IAAI,IAAI,KAAe,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrE;;;OAGG;IACH,IAAI,aAAa,KAAW,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;IACtF;;OAEG;IACH,IAAI,SAAS,KAAkB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC5E;;OAEG;IACH,IAAI,cAAc,KAAuB,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAChG;;;OAGG;IACH,gBAAgB,KAAU,CAAC;AAC3B,CAAC;AAED;IACA;;;OAGG;IACH,0BAA0B,CAAC,SAAS,CAAC,OAAO,CAAC;IAC7C;;;OAGG;IACH,0BAA0B,CAAC,SAAS,CAAC,WAAW,CAAC;IACjD;;;OAGG;IACH,0BAA0B,CAAC,SAAS,CAAC,gBAAgB,CAAC;AACtD,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy, OnInit} from '@angular/core/index';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n * \n * \\@stable\n */\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n\n  /** @internal */\n  _validators: any[];\n\n  /** @internal */\n  _asyncValidators: any[];\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._checkParentType();\n    this.formDirective.addFormGroup(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n/**\n * Get the {\\@link FormGroup} backing this binding.\n * @return {?}\n */\nget control(): FormGroup { return this.formDirective.getFormGroup(this); }\n/**\n * Get the path to this control group.\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, this._parent); }\n/**\n * Get the {\\@link Form} to which this group belongs.\n * @return {?}\n */\nget formDirective(): Form { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return composeValidators(this._validators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {}\n}\n\nfunction AbstractFormGroupDirective_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._parent;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._validators;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._asyncValidators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}